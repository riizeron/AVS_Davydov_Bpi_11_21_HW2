//------------------------------------------------------------------------------
// polar.cpp - содержит функции обработки полярных координат
//------------------------------------------------------------------------------

#include "polar.h"

//------------------------------------------------------------------------------
// Ввод параметров полярной координаты из потока
void Polar::In(FILE& ifst) {
    fscanf(&ifst, "%d%d", a, b);
    if (a <= 0) {
        printf("%s", "Incorrect input values.\nRadial distance must be positive");
        exit(0);
    }
    if (b >= 360 || b < 0) {
        printf("%s", "Incorrect input values.\nAzimuth must be between 0 and 360 degrees");
        exit(0);
    }
}

// Случайный ввод параметров полярной координаты
void Polar::InRnd() {
    do {
        a = Number::rnd20.Get();
        b = Number::rnd20.Get();
    } while (b >= 360 || a < 0 || b < 0);
}

//------------------------------------------------------------------------------
// Вывод параметров полярной координаты в поток
void Polar::Out(FILE& ofst) {
    fprintf(&ofst, "%s%d%s%d%s%g%s", "It is Polar: a = "
        , a, ", b = ", b
        , ". Real = ", Real(), "\n");
}

//------------------------------------------------------------------------------
// Приведение полярной координаты к действительному числу
double Polar::Real() {
    return a;
}
